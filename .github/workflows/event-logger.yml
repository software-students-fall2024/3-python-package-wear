name: Log Github Actions

on:
  push:
    branches: [main, master, pipfile-experiment]
  pull_request:
    types: [opened, closed]
    branches: [main, master, pipfile-experiment]

jobs:
  log:
    runs-on: ubuntu-latest
    env:
      PIPENV_PIPFILE: .github/workflows/Pipfile
      COMMIT_LOG_API: ${{ secrets.COMMIT_LOG_API }}
      GITHUB_LOGIN: ${{ github.actor }}
      COMMITS: ${{ toJSON(github.event.commits) }}
      REPOSITORY_URL: ${{ github.repositoryUrl }}
      EVENT_TYPE: ${{ github.event_name }}
      EVENT_ACTION: ${{ github.event.action }}
      PR_MERGED: ${{ github.event.pull_request.merged }}
      PR_CREATED_AT: ${{ github.event.pull_request.created_at }}
      PR_CLOSED_AT: ${{ github.event.pull_request.closed_at }}
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # fetches full history

      - name: Clear pip cache  # Add cache clearing step here
        run: |
          pip cache purge

      - uses: actions/setup-python@v4  # Ensure using the latest version of setup-python
        with:
          python-version: "3.11"

      - name: Setup Node.js  # Add Node.js setup for compatibility with latest GitHub actions
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        env:
          PIPENV_IGNORE_VIRTUALENVS: 1
        run: |
          python -m pip install --upgrade pip
          pip install --user pipenv
          pipenv install

      # Remaining steps unchanged...

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]  # Ensure valid Python versions are specified

    steps:
      - uses: actions/checkout@v3

      - name: Clear pip cache  # Add cache clearing step here as well
        run: |
          pip cache purge

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Node.js  # Add Node.js setup for compatibility
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install pipenv
        env:
          PIPENV_IGNORE_VIRTUALENVS: 1
        run: |
          python -m pip install --upgrade pip
          pip install --user pipenv

      - name: Set up pipenv environment
        env:
          PIPENV_IGNORE_VIRTUALENVS: 1
        run: |
          pipenv install --python $(which python) --dev  # Ensure pipenv uses the correct Python version

      - name: Install dependencies with pipenv
        run: |
          pipenv lock --clear
          pipenv install --dev

      - name: Verify Python Version
        run: |
          pipenv --python
          python --version
          pipenv --venv

      - name: Run tests
        env:
          PYTHONPATH: src
        run: |
          pipenv run pytest tests/test_codeshakespeare.py -v
